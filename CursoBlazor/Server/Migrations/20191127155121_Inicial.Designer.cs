// <auto-generated />
using System;
using CursoBlazor.Server.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CursoBlazor.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191127155121_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.CategoriaFilme", b =>
                {
                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int>("FilmeId")
                        .HasColumnType("integer");

                    b.HasKey("CategoriaId", "FilmeId");

                    b.HasIndex("FilmeId");

                    b.ToTable("CategoriaFilmes");
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DataLancamento")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("EmCartaz")
                        .HasColumnType("boolean");

                    b.Property<string>("Imagem")
                        .HasColumnType("text");

                    b.Property<string>("Resumo")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Trailer")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.FilmePessoa", b =>
                {
                    b.Property<int>("FilmeId")
                        .HasColumnType("integer");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<string>("Personagem")
                        .HasColumnType("text");

                    b.HasKey("FilmeId", "PessoaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("FilmePessoas");
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Biografia")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.CategoriaFilme", b =>
                {
                    b.HasOne("CursoBlazor.Shared.Entidades.Categoria", "Categoria")
                        .WithMany("CategoriaFilme")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoBlazor.Shared.Entidades.Filme", "Filme")
                        .WithMany("CategoriaFilme")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CursoBlazor.Shared.Entidades.FilmePessoa", b =>
                {
                    b.HasOne("CursoBlazor.Shared.Entidades.Filme", "Fime")
                        .WithMany("FilmePessoas")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CursoBlazor.Shared.Entidades.Pessoa", "Pessoa")
                        .WithMany("FilmePessoas")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
